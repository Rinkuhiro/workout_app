"use strict";

var _react = _interopRequireDefault(require("react"));
var _reactTestRenderer = _interopRequireDefault(require("react-test-renderer"));
var _reactNative = require("react-native");
var _Container = _interopRequireDefault(require("./Container"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
const setupContainer = function () {
  let overrideProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  return /*#__PURE__*/_react.default.createElement(_Container.default, overrideProps);
};
describe('<Container />', () => {
  it('renders basic props correctly', () => {
    const wrapper = _reactTestRenderer.default.create(setupContainer());
    expect(wrapper).toMatchSnapshot();
  });
  it('renders basic props correctly - fluid', () => {
    const wrapper = _reactTestRenderer.default.create(setupContainer({
      children: /*#__PURE__*/_react.default.createElement(_reactNative.Text, null, "test"),
      fluid: true
    }));
    expect(wrapper).toMatchSnapshot();
  });
  it('renders basic props correctly - fluid - noPadding', () => {
    const wrapper = _reactTestRenderer.default.create(setupContainer({
      children: /*#__PURE__*/_react.default.createElement(_reactNative.Text, null, "test"),
      fluid: true,
      noPadding: true
    }));
    expect(wrapper).toMatchSnapshot();
  });
  it('renders basic props correctly - Element - style', () => {
    const wrapper = _reactTestRenderer.default.create(setupContainer({
      children: /*#__PURE__*/_react.default.createElement(_reactNative.Text, null, "test"),
      Element: _reactNative.ScrollView,
      style: {
        padding: 0
      }
    }));
    expect(wrapper).toMatchSnapshot();
  });
});
//# sourceMappingURL=Container.test.js.map